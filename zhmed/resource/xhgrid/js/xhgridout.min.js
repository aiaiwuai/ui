var gridRoot, dataGrid, collection, jsVars = "KoolOnLoadCallFunction=gridReadyHandler", xhchartclickcallback = null,
    layoutStr = null, xhchartkeys = [], gridData = null,
    layoutbefore = '<KoolGrid><DataGrid id="dg1" selectionMode="singleRow" dragSelectable="false"><columns>',
    layoutafter = "</columns> </DataGrid> </KoolGrid>", gridApp = null;

function createxhchart() {
    null !== layoutStr && null !== gridData && KoolGrid.create("grid1", "gridHolder", jsVars, "100%", "100%")
}

function updatexhchartcallback(t) {
    xhchartclickcallback = t
}

function updatexhchartcontent(t) {
    if (!(t.length <= 0)) {
        var e = "";
        for (var a in t[0]) e = e + '<DataGridColumn dataField="' + a + '" textAlign="right"/>', xhchartkeys.push(a);
        layoutStr = layoutbefore + e + layoutafter, gridData = t, null === gridApp ? createxhchart() : gridApp.setData(gridData)
    }
}

function xhgridresize() {
    null !== gridApp && KoolGrid.resize()
}

function gridReadyHandler(t) {
    gridApp = document.getElementById(t), gridRoot = gridApp.getRoot(), gridApp.setLayout(layoutStr), gridApp.setData(gridData);
    var e = function (t) {
        t.rowIndex, t.columnIndex;
        if ("singleRow" == dataGrid.getSelectionMode()) {
            var e = dataGrid.getSelectedIndices();
            console.log(gridData[e[0]][xhchartkeys[0]]), null !== xhchartclickcallback && xhchartclickcallback(gridData[e[0]][xhchartkeys[0]])
        } else if ("multipleRows" == dataGrid.getSelectionMode()) {
            e = dataGrid.getSelectedIndices();
            for (var a = 0; a < e.length; a++) console.log(e[a])
        } else {
            var l = dataGrid.getSelectedCells();
            for (a = 0; a < l.length; a++) console.log(l[a].rowIndex + ":" + l[a].columnIndex)
        }
    }, a = function (t) {
        contextMenuHandler(t.getMenuItemCaption())
    };
    gridRoot.addEventListener("dataComplete", function (t) {
        (dataGrid = gridRoot.getDataGrid()).addEventListener("change", e), dataGrid.addEventListener("gridMenuItemSelect", a), collection = gridRoot.getCollection()
    })
}